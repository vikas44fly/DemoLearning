<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="2" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="20364" started-at="2020-01-24T18:10:04 IST" finished-at="2020-01-24T18:10:24 IST">
    <groups>
    </groups>
    <test name="Functional Regression" duration-ms="20364" started-at="2020-01-24T18:10:04 IST" finished-at="2020-01-24T18:10:24 IST">
      <class name="tests.LoginTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.LoginTest@6f3b5d16]" name="setup" is-config="true" duration-ms="6329" started-at="2020-01-24T18:09:57 IST" finished-at="2020-01-24T18:10:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="startExtentReport()[pri:0, instance:tests.LoginTest@6f3b5d16]" name="startExtentReport" is-config="true" duration-ms="146" started-at="2020-01-24T18:10:04 IST" finished-at="2020-01-24T18:10:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtentReport -->
        <test-method status="PASS" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@6f3b5d16]" name="createExtentTest" is-config="true" duration-ms="10319" started-at="2020-01-24T18:10:04 IST" finished-at="2020-01-24T18:10:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.validateLoginFunctionality() throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method status="PASS" signature="validateLoginFunctionality()[pri:0, instance:tests.LoginTest@6f3b5d16]" name="validateLoginFunctionality" duration-ms="3897" started-at="2020-01-24T18:10:14 IST" finished-at="2020-01-24T18:10:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLoginFunctionality -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@6f3b5d16]" name="getResult" is-config="true" duration-ms="1" started-at="2020-01-24T18:10:18 IST" finished-at="2020-01-24T18:10:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLoginFunctionality status=SUCCESS method=LoginTest.validateLoginFunctionality()[pri:0, instance:tests.LoginTest@6f3b5d16] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@6f3b5d16]" name="createExtentTest" is-config="true" duration-ms="2434" started-at="2020-01-24T18:10:18 IST" finished-at="2020-01-24T18:10:21 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.validateInvalidLoginFunctionality() throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method status="PASS" signature="validateInvalidLoginFunctionality()[pri:1, instance:tests.LoginTest@6f3b5d16]" name="validateInvalidLoginFunctionality" duration-ms="3168" started-at="2020-01-24T18:10:21 IST" finished-at="2020-01-24T18:10:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidLoginFunctionality -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@6f3b5d16]" name="getResult" is-config="true" duration-ms="0" started-at="2020-01-24T18:10:24 IST" finished-at="2020-01-24T18:10:24 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateInvalidLoginFunctionality status=SUCCESS method=LoginTest.validateInvalidLoginFunctionality()[pri:1, instance:tests.LoginTest@6f3b5d16] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="reportclosewindows()[pri:0, instance:tests.LoginTest@6f3b5d16]" name="reportclosewindows" is-config="true" duration-ms="360" started-at="2020-01-24T18:10:24 IST" finished-at="2020-01-24T18:10:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportclosewindows -->
        <test-method status="PASS" signature="quitSetup()[pri:0, instance:tests.LoginTest@6f3b5d16]" name="quitSetup" is-config="true" duration-ms="0" started-at="2020-01-24T18:10:24 IST" finished-at="2020-01-24T18:10:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitSetup -->
      </class> <!-- tests.LoginTest -->
    </test> <!-- Functional Regression -->
  </suite> <!-- Suite -->
</testng-results>
